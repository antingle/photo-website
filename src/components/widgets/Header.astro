---
import ToggleMenu from "~/components/common/ToggleMenu.astro";
import Logo from "~/components/common/Logo.astro";
import type { ActionLink, MenuLink } from "~/types/links";

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  position?: string;
  noHeight?: boolean;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  position = "center",
  noHeight = false,
} = Astro.props;

const delayArray = ["delay-75", "delay-100", "delay-150", "delay-200", "delay-300"];
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, "h-16 md:h-auto": !noHeight },
    "top-0 z-40 flex-none mx-auto w-full h-0 text-slate-900",
  ]}
  id="header"
>
  <div class="backdrop-blur bg-white/80 w-full max-h-16 md:max-h-20 transition-all duration-300">
    <div class="py-3 px-4 mx-auto w-full max-w-4xl md:flex md:justify-between max-h-16 md:max-h-20">
      <div class:list={[{ "mr-auto": position === "right" }, "flex justify-between"]}>
        <a class="flex items-center" href={"/"}>
          <Logo />
        </a>
        <div class="flex items-center md:hidden">
          <ToggleMenu />
        </div>
      </div>
      <nav
        class="items-center w-full md:w-auto md:flex md:mx-5 scale-y-0 md:scale-y-100 transition origin-top duration-100 delay-100 md:flex-1"
        aria-label="Main navigation"
      >
        <ul
          class="flex flex-col pt-4 pb-3 md:pb-0 md:pt-0 md:flex-row md:self-center w-full md:w-auto text-xl md:text-base md:flex-1 md:justify-center"
        >
          {
            links.map(({ text, href }, index) => (
              <li
                class={`transition duration-200 -translate-y-8 opacity-0 md:-translate-y-0 md:opacity-100 ${delayArray[index]}`}
              >
                <a
                  class="font-normal hover:text-gray-900 px-4 py-3 flex items-center justify-center transition duration-150 ease-in-out"
                  href={href}
                >
                  {text}
                </a>
              </li>
            ))
          }
        </ul>

        <div
          class={`items-center md:flex gap-4 transition duration-300 opacity-0 md:-translate-y-0 md:opacity-100 ${
            delayArray[links.length]
          }`}
        >
          {
            actions?.length ? (
              <span>
                {actions.map(({ text, href, type }) => (
                  <a
                    class:list={[
                      "btn py-2.5 px-12 md:text-sm w-full",
                      {
                        "btn-ghost": type === "ghost",
                        "btn-primary": type === "primary",
                      },
                    ]}
                    href={href}
                  >
                    <Fragment set:html={text} />
                  </a>
                ))}
              </span>
            ) : (
              ""
            )
          }
        </div>
      </nav>
    </div>
  </div>
</header>
