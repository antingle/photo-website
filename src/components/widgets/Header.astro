---
import ToggleMenu from "~/components/common/ToggleMenu.astro";
import Logo from "~/components/common/Logo.astro";
import type { ActionLink, MenuLink } from "~/types/links";

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  position?: string;
  noHeight?: boolean;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  position = "center",
  noHeight = false,
} = Astro.props;

const currentPath = Astro.url.pathname; // use to highlight current path link
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, "h-16 md:h-auto": !noHeight },
    "top-0 z-40 flex-none mx-auto w-full h-0 text-slate-900 transition-shadow rounded-b-xl",
  ]}
  id="header"
>
  <div
    class="backdrop-blur bg-white/80 w-full max-h-16 md:max-h-20 transition-all duration-500 rounded-b-xl"
  >
    <div
      class="py-3 md:py-4 px-4 mx-auto w-full max-w-4xl md:flex md:justify-between max-h-16 md:max-h-20 duration-500 rounded-b-xl"
    >
      <div class:list={[{ "mr-auto": position === "right" }, "flex justify-between"]}>
        <a class="flex items-center" href={"/"}>
          <Logo />
        </a>
        <div class="flex items-center md:hidden">
          <ToggleMenu />
        </div>
      </div>
      <nav
        class="items-center w-full md:w-auto md:flex md:mx-5 transition origin-top duration-500 hidden md:flex-1"
        aria-label="Main navigation"
      >
        <ul
          class="flex flex-col md:gap-2 pt-4 pb-3 md:pb-0 md:pt-0 md:flex-row md:self-center w-full md:w-auto text-xl md:text-base md:flex-1 md:justify-center"
        >
          {
            links.map(({ text, href }) => (
              <li>
                <a
                  class:list={[
                    "font-light hover:bg-gray-100 hover:shadow-md rounded-2xl px-8 py-3 flex items-center justify-center transition duration-150 ease-in-out",
                    currentPath.split("/")[1] == href.split("/")[1] ? "bg-slate-100 shadow-lg" : "",
                  ]}
                  href={href}
                >
                  {text}
                </a>
              </li>
            ))
          }
        </ul>

        <div id="action-links" class={`items-center justify-center flex gap-2`}>
          {
            actions?.length ? (
              <>
                {actions.map(({ text, href, type }) => (
                  <a
                    class:list={[
                      "btn md:py-3 md:px-16 text-md w-full shadow-lg",
                      {
                        "btn-ghost": type === "ghost",
                        "btn-primary": type === "primary",
                      },
                    ]}
                    href={href}
                  >
                    <Fragment set:html={text} />
                  </a>
                ))}
              </>
            ) : (
              ""
            )
          }
        </div>
      </nav>
    </div>
  </div>
</header>
