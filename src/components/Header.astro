---
import { Icon } from "astro-icon";
import ToggleMenu from "../common/ToggleMenu.astro";
import Logo from "./Logo.astro";
import type { ActionLink, MenuLink } from "./header";

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  position?: string;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  position = "center",
} = Astro.props;

const delayArray = [
  "delay-75",
  "delay-100",
  "delay-150",
  "delay-200",
  "delay-300",
];
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    "top-0 z-40 flex-none mx-auto w-full h-16 md:h-24 text-slate-900",
  ]}
  id="header"
>
  <div
    class:list={[
      { "backdrop-blur-xl": isSticky, "bg-white": !isSticky },
      "py-3 px-4 mx-auto w-full md:flex md:justify-between max-w-4xl max-h-16 md:max-h-24 transition-all duration-300",
    ]}
  >
    <div
      class:list={[{ "mr-auto": position === "right" }, "flex justify-between"]}
    >
      <a class="flex items-center" href={"/"}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto md:flex md:mx-5 scale-y-0 md:scale-y-100 transition origin-top duration-100 delay-100"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col pt-4 md:pt-0 md:flex-row md:self-center w-full md:w-auto text-xl md:text-base"
      >
        {
          links.map(({ text, href, links }, index) => (
            <li
              class={`transition duration-200 -translate-y-8 opacity-0 md:-translate-y-0 md:opacity-100 ${delayArray[index]}`}
            >
              <a
                class="font-medium hover:text-slate-800 px-4 py-3 flex items-center transition duration-150 ease-in-out"
                href={href}
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { "ml-auto": position === "left" },
        "md:self-center flex items-center md:mb-0",
      ]}
    >
      <div class="hidden items-center md:flex">
        {
          actions?.length ? (
            <span class="ml-4">
              {actions.map(({ text, href, type }) => (
                <a
                  class:list={[
                    "btn ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm",
                    {
                      "btn-ghost": type === "ghost",
                      "btn-primary": type === "primary",
                    },
                  ]}
                  href={href}
                >
                  <Fragment set:html={text} />
                </a>
              ))}
            </span>
          ) : (
            ""
          )
        }
      </div>
    </div>
  </div>
</header>
